trigger:
- master   # only branches go here

pool:
  vmImage: 'ubuntu-latest'

variables:
  dockerHubConnection: 'arunkamboj-dockerhub-conn'
  dockerHubUsername: 'arunkamboj'
  imageGateway: 'microservice-gateway'
  imageProduct: 'product-microservice'
  imageUser: 'user-microservice'

steps:
# ✅ Install Docker

- task: SSH@0
  displayName: 'Deploy microservices to server'
  inputs:
    sshEndpoint: 'Arun-deployment'
    runOptions: 'commands'
    commands: |
      docker pull arunkamboj/microservice-gateway:latest
      docker pull arunkamboj/user-gateway:latest
      docker pull arunkamboj/product-gateway:latest
    readyTimeout: '20000'
- task: DockerInstaller@0
  inputs:
    dockerVersion: '20.10.7'

# ✅ Build & Push Gateway Image
- task: Docker@2
  displayName: 'Build & Push Gateway Image'
  inputs:
    containerRegistry: '$(dockerHubConnection)'
    repository: '$(dockerHubUsername)/$(imageGateway)'
    command: 'buildAndPush'
    Dockerfile: 'Microservice-gateway/Dockerfile'
    buildContext: 'Microservice-gateway'
    tags: 'latest'

# ✅ Build & Push Product Microservice Image
- task: Docker@2
  displayName: 'Build & Push Product Microservice Image'
  inputs:
    containerRegistry: '$(dockerHubConnection)'
    repository: '$(dockerHubUsername)/$(imageProduct)'
    command: 'buildAndPush'
    Dockerfile: 'product-microservice/Dockerfile'
    buildContext: 'product-microservice'
    tags: 'latest'

# ✅ Build & Push User Microservice Image
- task: Docker@2
  displayName: 'Build & Push User Microservice Image'
  inputs:
    containerRegistry: '$(dockerHubConnection)'
    repository: '$(dockerHubUsername)/$(imageUser)'
    command: 'buildAndPush'
    Dockerfile: 'user-microservice/Dockerfile'
    buildContext: 'user-microservice'
    tags: 'latest'

# ✅ Run docker-compose for integration tests
- script: |
    echo "Starting services with docker-compose..."
    docker-compose -f docker-compose.yml up -d --build
    echo "Waiting for MongoDB to be ready..."
    sleep 20
    echo "Running tests..."
    docker exec microservice-gateway npm run test || true
    docker exec product-microservice npm run test || true
    docker exec user-microservice npm run test || true
    echo "Stopping services..."
    docker-compose -f docker-compose.yml down
  displayName: 'Run Integration Tests with Docker Compose'
